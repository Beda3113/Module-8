fastapi==0.95.2
uvicorn==0.22.0
jinja2==3.1.2


main.py
from fastapi import FastAPI, Request
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from fastapi.responses import HTMLResponse

app = FastAPI()

app.mount("/static", StaticFiles(directory="static"), name="static")
templates = Jinja2Templates(directory="templates")

@app.get("/", response_class=HTMLResponse)
async def read_root(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8001)


style.css

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    background-color: #f5f5f5;
    color: #333;
    padding: 20px;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    background: white;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

h1 {
    text-align: center;
    margin-bottom: 30px;
    color: #2c3e50;
}

.tabs {
    display: flex;
    margin-bottom: 20px;
    border-bottom: 1px solid #ddd;
}

.tab-btn {
    padding: 10px 20px;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 16px;
    color: #7f8c8d;
    transition: all 0.3s;
}

.tab-btn.active {
    color: #2c3e50;
    border-bottom: 2px solid #3498db;
    font-weight: bold;
}

.tab-content {
    display: none;
    padding: 20px 0;
}

.tab-content.active {
    display: block;
}

.form-group {
    margin-bottom: 15px;
}

label {
    display: block;
    margin-bottom: 5px;
    font-weight: 600;
    color: #2c3e50;
}

input[type="text"],
input[type="number"],
textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
}

textarea {
    min-height: 100px;
    resize: vertical;
}

.price-range {
    display: flex;
    gap: 15px;
}

.price-range .form-group {
    flex: 1;
}

button {
    background-color: #3498db;
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #2980b9;
}

.success, .error {
    padding: 15px;
    margin-top: 20px;
    border-radius: 4px;
}

.success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

.ads-list {
    margin-top: 20px;
}

.ad-card {
    background: white;
    border: 1px solid #eee;
    border-radius: 4px;
    padding: 15px;
    margin-bottom: 15px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.ad-card h4 {
    color: #2c3e50;
    margin-bottom: 10px;
}

.ad-footer {
    display: flex;
    justify-content: space-between;
    margin-top: 15px;
    color: #7f8c8d;
    font-size: 14px;
}

.price {
    color: #27ae60;
    font-weight: bold;
}

.author {
    font-style: italic;
}

.date {
    color: #95a5a6;
}

@media (max-width: 600px) {
    .container {
        padding: 15px;
    }
    
    .price-range {
        flex-direction: column;
        gap: 0;
    }
}



index.html

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Доска объявлений</title>
    <link rel="stylesheet" href="/static/style.css">
</head>
<body>
    <div class="container">
        <h1>Доска объявлений</h1>
        
        <div class="tabs">
            <button class="tab-btn active" onclick="openTab('create')">Создать</button>
            <button class="tab-btn" onclick="openTab('search')">Поиск</button>
        </div>
        
        <div id="create" class="tab-content active">
            <h2>Новое объявление</h2>
            <form id="createForm">
                <div class="form-group">
                    <label for="title">Заголовок*</label>
                    <input type="text" id="title" required maxlength="100">
                </div>
                <div class="form-group">
                    <label for="description">Описание</label>
                    <textarea id="description" maxlength="500"></textarea>
                </div>
                <div class="form-group">
                    <label for="price">Цена*</label>
                    <input type="number" id="price" required min="1">
                </div>
                <div class="form-group">
                    <label for="author">Автор*</label>
                    <input type="text" id="author" required maxlength="50">
                </div>
                <button type="submit">Опубликовать</button>
            </form>
            <div id="createResult"></div>
        </div>
        
        <div id="search" class="tab-content">
            <h2>Поиск объявлений</h2>
            <form id="searchForm">
                <div class="form-group">
                    <label for="searchTitle">Заголовок</label>
                    <input type="text" id="searchTitle">
                </div>
                <div class="form-group">
                    <label for="searchAuthor">Автор</label>
                    <input type="text" id="searchAuthor">
                </div>
                <div class="price-range">
                    <div class="form-group">
                        <label for="minPrice">Цена от</label>
                        <input type="number" id="minPrice" min="0">
                    </div>
                    <div class="form-group">
                        <label for="maxPrice">Цена до</label>
                        <input type="number" id="maxPrice" min="0">
                    </div>
                </div>
                <button type="submit">Искать</button>
            </form>
            <div id="searchResults"></div>
        </div>
    </div>

    <script>
        const API_URL = 'http://backend:8000/advertisements';
        
        // Управление табами
        function openTab(tabName) {
            const tabs = document.querySelectorAll('.tab-content');
            const btns = document.querySelectorAll('.tab-btn');
            
            tabs.forEach(tab => tab.classList.remove('active'));
            btns.forEach(btn => btn.classList.remove('active'));
            
            document.getElementById(tabName).classList.add('active');
            event.currentTarget.classList.add('active');
        }
        
        // Обработка формы создания
        document.getElementById('createForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const ad = {
                title: document.getElementById('title').value,
                description: document.getElementById('description').value,
                price: parseInt(document.getElementById('price').value),
                author: document.getElementById('author').value
            };
            
            try {
                const response = await fetch(API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(ad)
                });
                
                if (!response.ok) throw new Error(await response.text());
                
                const result = await response.json();
                document.getElementById('createResult').innerHTML = `
                    <div class="success">
                        Объявление #${result.id} успешно создано!
                    </div>
                `;
                document.getElementById('createForm').reset();
            } catch (error) {
                document.getElementById('createResult').innerHTML = `
                    <div class="error">
                        Ошибка: ${error.message}
                    </div>
                `;
            }
        });
        
        // Обработка формы поиска
        document.getElementById('searchForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const params = new URLSearchParams();
            if (document.getElementById('searchTitle').value) 
                params.append('title', document.getElementById('searchTitle').value);
            if (document.getElementById('searchAuthor').value) 
                params.append('author', document.getElementById('searchAuthor').value);
            if (document.getElementById('minPrice').value) 
                params.append('price_min', document.getElementById('minPrice').value);
            if (document.getElementById('maxPrice').value) 
                params.append('price_max', document.getElementById('maxPrice').value);
            
            try {
                const response = await fetch(`${API_URL}?${params.toString()}`);
                if (!response.ok) throw new Error(await response.text());
                
                const ads = await response.json();
                let html = '<h3>Результаты поиска</h3>';
                
                if (ads.length === 0) {
                    html += '<p>Объявления не найдены</p>';
                } else {
                    html += '<div class="ads-list">';
                    ads.forEach(ad => {
                        html += `
                            <div class="ad-card">
                                <h4>${ad.title}</h4>
                                <p>${ad.description || 'Нет описания'}</p>
                                <div class="ad-footer">
                                    <span class="price">${ad.price} ₽</span>
                                    <span class="author">${ad.author}</span>
                                    <span class="date">${new Date(ad.created_at).toLocaleString()}</span>
                                </div>
                            </div>
                        `;
                    });
                    html += '</div>';
                }
                
                document.getElementById('searchResults').innerHTML = html;
            } catch (error) {
                document.getElementById('searchResults').innerHTML = `
                    <div class="error">
                        Ошибка поиска: ${error.message}
                    </div>
                `;
            }
        });
    </script>
</body>
</html>